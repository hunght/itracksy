name: Release Windows

on:
  push:
    tags:
      - "v*.*.*" # Trigger on version tags

permissions:
  contents: write
  packages: write

jobs:
  release-windows:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Azure CLI
        run: |
          Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile AzureCLI.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'
          Remove-Item AzureCLI.msi

      - name: Azure Login
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          az login --service-principal `
            --username $env:AZURE_CLIENT_ID `
            --password $env:AZURE_CLIENT_SECRET `
            --tenant $env:AZURE_TENANT_ID

          az trustedsigning certificate-profile show `
            --resource-group itracks `
            --account-name hung `
            --name itracksy-cert

      - name: Install Windows SDK
        run: |
          Invoke-WebRequest -Uri https://go.microsoft.com/fwlink/p/?linkid=2196241 -OutFile winsdksetup.exe
          Start-Process -Wait -FilePath .\winsdksetup.exe -ArgumentList "/features OptionId.SigningTools /quiet"
          Remove-Item winsdksetup.exe

      - name: Setup signing tools
        run: |
          Invoke-WebRequest -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile nuget.exe
          .\nuget.exe install Microsoft.Trusted.Signing.Client -Version 1.0.53 -x
          $metadata = @{
            Endpoint = "https://eus.codesigning.azure.net"
            CodeSigningAccountName = "hung"
            CertificateProfileName = "itracksy-cert"
          } | ConvertTo-Json
          Set-Content -Path "metadata.json" -Value $metadata

      - name: Sign Windows executable
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          $version = (Get-Content package.json | ConvertFrom-Json).version
          $setupFile = "out/make/squirrel.windows/x64/itracksy-$version Setup.exe"
          Write-Host "Signing setup file: $setupFile"
          az login --service-principal `
            --username $env:AZURE_CLIENT_ID `
            --password $env:AZURE_CLIENT_SECRET `
            --tenant $env:AZURE_TENANT_ID

      - name: Build app
        run: npm run make

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "out/make/**/*"
