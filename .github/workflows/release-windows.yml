name: Release Windows

on:
  push:
    tags:
      - "v*.*.*" # Trigger on version tags

permissions:
  contents: write
  packages: write

jobs:
  release-windows:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Azure CLI
        run: |
          Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile AzureCLI.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'
          Remove-Item AzureCLI.msi

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"

      - name: Download Jsign
        run: |
          Invoke-WebRequest -Uri "https://github.com/ebourg/jsign/releases/download/7.0/jsign-7.0.jar" -OutFile "jsign-7.0.jar"

      - name: Create data directories
        shell: bash
        run: |
          mkdir -p data
          mkdir -p out/make/data
          mkdir -p release/data
          mkdir -p dist/data

      - name: Build Windows executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_KEY }}
          VITE_AXIOM_TOKEN: ${{ secrets.VITE_AXIOM_TOKEN }}
          VITE_AXIOM_ORG_ID: ${{ secrets.VITE_AXIOM_ORG_ID }}
          VITE_AXIOM_DATASET: ${{ secrets.VITE_AXIOM_DATASET }}
        run: npm run make

      - name: Sign Windows executable
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          # Get the version from package.json
          $version = (Get-Content package.json | ConvertFrom-Json).version
          $setupFile = "out/make/squirrel.windows/x64/itracksy-$version Setup.exe"

          Write-Host "Signing setup file: $setupFile"

          # Login to Azure CLI
          az login --service-principal `
            --username $env:AZURE_CLIENT_ID `
            --password $env:AZURE_CLIENT_SECRET `
            --tenant $env:AZURE_TENANT_ID

          # Get Azure access token for code signing
          $accessToken = az account get-access-token --resource "https://codesigning.azure.net" --query accessToken -o tsv

          # Sign using JSign
          java -jar jsign-7.0.jar `
            --storetype TRUSTEDSIGNING `
            --keystore eus.codesigning.azure.net `
            --storepass $accessToken `
            --alias hung/itracksy-cert `
            $setupFile

          Write-Host "Signing complete"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            out/make/squirrel.windows/x64/*.exe
            out/make/squirrel.windows/x64/*.nupkg
            out/make/squirrel.windows/x64/RELEASES
